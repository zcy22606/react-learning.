{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL, TIMEOUT } from \"./config\";\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  timeout: TIMEOUT\n});\ninstance.interceptors.request.use(config => {\n  // 1.发送网络请求时, 在界面的中间位置显示Loading的组件\n  // 2.某一些请求要求用户必须携带token, 如果没有携带, 那么直接跳转到登录页面\n  // 3.params/data序列化的操作\n  return config;\n}, err => {});\ninstance.interceptors.response.use(res => {\n  return res.data;\n}, err => {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        console.log(\"请求错误\");\n        break;\n\n      case 401:\n        console.log(\"未授权访问\");\n        break;\n\n      default:\n        console.log(\"其他错误信息\");\n    }\n  }\n\n  return err;\n});\nexport default instance;","map":{"version":3,"sources":["C:/Users/冷鸟一米五/Desktop/my-learn/React学习/课堂/code/hy-music-web-music/src/services/request.js"],"names":["axios","BASE_URL","TIMEOUT","instance","create","baseURL","timeout","interceptors","request","use","config","err","response","res","data","status","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,UAAlC;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEJ,QADmB;AAE5BK,EAAAA,OAAO,EAAEJ;AAFmB,CAAb,CAAjB;AAKAC,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCC,MAAM,IAAI;AAC1C;AAEA;AAEA;AAEA,SAAOA,MAAP;AACD,CARD,EAQGC,GAAG,IAAI,CAET,CAVD;AAYAR,QAAQ,CAACI,YAAT,CAAsBK,QAAtB,CAA+BH,GAA/B,CAAmCI,GAAG,IAAI;AACxC,SAAOA,GAAG,CAACC,IAAX;AACD,CAFD,EAEGH,GAAG,IAAI;AACR,MAAIA,GAAG,IAAIA,GAAG,CAACC,QAAf,EAAyB;AACvB,YAAQD,GAAG,CAACC,QAAJ,CAAaG,MAArB;AACE,WAAK,GAAL;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;;AACF,WAAK,GAAL;AACED,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;;AACF;AACED,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AARJ;AAUD;;AACD,SAAON,GAAP;AACD,CAhBD;AAkBA,eAAeR,QAAf","sourcesContent":["import axios from 'axios';\n\nimport { BASE_URL, TIMEOUT } from \"./config\";\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  timeout: TIMEOUT\n});\n\ninstance.interceptors.request.use(config => {\n  // 1.发送网络请求时, 在界面的中间位置显示Loading的组件\n\n  // 2.某一些请求要求用户必须携带token, 如果没有携带, 那么直接跳转到登录页面\n\n  // 3.params/data序列化的操作\n\n  return config;\n}, err => {\n\n});\n\ninstance.interceptors.response.use(res => {\n  return res.data;\n}, err => {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        console.log(\"请求错误\");\n        break;\n      case 401:\n        console.log(\"未授权访问\");\n        break;\n      default:\n        console.log(\"其他错误信息\");\n    }\n  }\n  return err;\n});\n\nexport default instance;\n\n"]},"metadata":{},"sourceType":"module"}