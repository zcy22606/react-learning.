{"ast":null,"code":"import * as actionTypes from './constants';\nimport { getNewAlbums } from '@/services/recommend';\nimport { getTopBanners, getHotRecommends, getTopList } from '@/services/recommend';\n\nconst changeTopBannerAction = res => ({\n  type: actionTypes.CHANGE_TOP_BANNERS,\n  topBanners: res.banners\n});\n\nconst changeHotRecommendAction = res => ({\n  type: actionTypes.CHANGE_HOT_RECOMMEND,\n  hotRecommends: res.result\n});\n\nconst changeNewAlbumAction = res => ({\n  type: actionTypes.CHANGE_NEW_ALBUM,\n  newAlbums: res.albums\n});\n\nconst changeUpRankingAction = res => ({\n  type: actionTypes.CHANGE_UP_RANKING,\n  upRanking: res.playlist\n});\n\nconst changeNewRankingAction = res => ({\n  type: actionTypes.CHANGE_NEW_RANKING,\n  newRanking: res.playlist\n});\n\nconst changeOriginRankingAction = res => ({\n  type: actionTypes.CHANGE_ORIGIN_RANKING,\n  originRanking: res.playlist\n});\n\nexport const getTopBannerAction = () => {\n  return dispatch => {\n    getTopBanners().then(res => {\n      dispatch(changeTopBannerAction(res));\n    });\n  };\n};\nexport const getHotRecommendAction = limit => {\n  return dispatch => {\n    getHotRecommends(limit).then(res => {\n      dispatch(changeHotRecommendAction(res));\n    });\n  };\n};\nexport const getNewAlbumAction = limit => {\n  return dispatch => {\n    getNewAlbums(limit).then(res => {\n      // const albums = res.albums;\n      dispatch(changeNewAlbumAction(res));\n    });\n  };\n};\nexport const getTopListAction = idx => {\n  return dispatch => {\n    getTopList(idx).then(res => {\n      switch (idx) {\n        case 0:\n          dispatch(changeUpRankingAction(res));\n          break;\n\n        case 2:\n          dispatch(changeNewRankingAction(res));\n          break;\n\n        case 3:\n          dispatch(changeOriginRankingAction(res));\n          break;\n\n        default:\n      }\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/冷鸟一米五/Desktop/my-learn/React学习/课堂/code/hy-music-web-music/src/pages/discover/c-pages/recommend/store/actionCreators.js"],"names":["actionTypes","getNewAlbums","getTopBanners","getHotRecommends","getTopList","changeTopBannerAction","res","type","CHANGE_TOP_BANNERS","topBanners","banners","changeHotRecommendAction","CHANGE_HOT_RECOMMEND","hotRecommends","result","changeNewAlbumAction","CHANGE_NEW_ALBUM","newAlbums","albums","changeUpRankingAction","CHANGE_UP_RANKING","upRanking","playlist","changeNewRankingAction","CHANGE_NEW_RANKING","newRanking","changeOriginRankingAction","CHANGE_ORIGIN_RANKING","originRanking","getTopBannerAction","dispatch","then","getHotRecommendAction","limit","getNewAlbumAction","getTopListAction","idx"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,aAA7B;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,SACEC,aADF,EAEEC,gBAFF,EAGEC,UAHF,QAIO,sBAJP;;AAMA,MAAMC,qBAAqB,GAAIC,GAAD,KAAU;AACtCC,EAAAA,IAAI,EAAEP,WAAW,CAACQ,kBADoB;AAEtCC,EAAAA,UAAU,EAAEH,GAAG,CAACI;AAFsB,CAAV,CAA9B;;AAKA,MAAMC,wBAAwB,GAAIL,GAAD,KAAU;AACzCC,EAAAA,IAAI,EAAEP,WAAW,CAACY,oBADuB;AAEzCC,EAAAA,aAAa,EAAEP,GAAG,CAACQ;AAFsB,CAAV,CAAjC;;AAKA,MAAMC,oBAAoB,GAAIT,GAAD,KAAU;AACrCC,EAAAA,IAAI,EAAEP,WAAW,CAACgB,gBADmB;AAErCC,EAAAA,SAAS,EAAEX,GAAG,CAACY;AAFsB,CAAV,CAA7B;;AAKA,MAAMC,qBAAqB,GAAIb,GAAD,KAAU;AACtCC,EAAAA,IAAI,EAAEP,WAAW,CAACoB,iBADoB;AAEtCC,EAAAA,SAAS,EAAEf,GAAG,CAACgB;AAFuB,CAAV,CAA9B;;AAKA,MAAMC,sBAAsB,GAAIjB,GAAD,KAAU;AACvCC,EAAAA,IAAI,EAAEP,WAAW,CAACwB,kBADqB;AAEvCC,EAAAA,UAAU,EAAEnB,GAAG,CAACgB;AAFuB,CAAV,CAA/B;;AAKA,MAAMI,yBAAyB,GAAIpB,GAAD,KAAU;AAC1CC,EAAAA,IAAI,EAAEP,WAAW,CAAC2B,qBADwB;AAE1CC,EAAAA,aAAa,EAAEtB,GAAG,CAACgB;AAFuB,CAAV,CAAlC;;AAKA,OAAO,MAAMO,kBAAkB,GAAG,MAAM;AACtC,SAAOC,QAAQ,IAAI;AACjB5B,IAAAA,aAAa,GAAG6B,IAAhB,CAAqBzB,GAAG,IAAI;AAC1BwB,MAAAA,QAAQ,CAACzB,qBAAqB,CAACC,GAAD,CAAtB,CAAR;AACD,KAFD;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAM0B,qBAAqB,GAAIC,KAAD,IAAW;AAC9C,SAAOH,QAAQ,IAAI;AACjB3B,IAAAA,gBAAgB,CAAC8B,KAAD,CAAhB,CAAwBF,IAAxB,CAA6BzB,GAAG,IAAI;AAClCwB,MAAAA,QAAQ,CAACnB,wBAAwB,CAACL,GAAD,CAAzB,CAAR;AACD,KAFD;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAM4B,iBAAiB,GAAID,KAAD,IAAW;AAC1C,SAAOH,QAAQ,IAAI;AACjB7B,IAAAA,YAAY,CAACgC,KAAD,CAAZ,CAAoBF,IAApB,CAAyBzB,GAAG,IAAI;AAC9B;AACAwB,MAAAA,QAAQ,CAACf,oBAAoB,CAACT,GAAD,CAArB,CAAR;AACD,KAHD;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAM6B,gBAAgB,GAAIC,GAAD,IAAS;AACvC,SAAON,QAAQ,IAAI;AACjB1B,IAAAA,UAAU,CAACgC,GAAD,CAAV,CAAgBL,IAAhB,CAAqBzB,GAAG,IAAI;AAC1B,cAAQ8B,GAAR;AACE,aAAK,CAAL;AACEN,UAAAA,QAAQ,CAACX,qBAAqB,CAACb,GAAD,CAAtB,CAAR;AACA;;AACF,aAAK,CAAL;AACEwB,UAAAA,QAAQ,CAACP,sBAAsB,CAACjB,GAAD,CAAvB,CAAR;AACA;;AACF,aAAK,CAAL;AACEwB,UAAAA,QAAQ,CAACJ,yBAAyB,CAACpB,GAAD,CAA1B,CAAR;AACA;;AACF;AAVF;AAYD,KAbD;AAcD,GAfD;AAgBD,CAjBM","sourcesContent":["import * as actionTypes from './constants';\n\nimport { getNewAlbums } from '@/services/recommend';\n\nimport { \n  getTopBanners,\n  getHotRecommends,\n  getTopList\n} from '@/services/recommend';\n\nconst changeTopBannerAction = (res) => ({\n  type: actionTypes.CHANGE_TOP_BANNERS,\n  topBanners: res.banners\n});\n\nconst changeHotRecommendAction = (res) => ({\n  type: actionTypes.CHANGE_HOT_RECOMMEND,\n  hotRecommends: res.result\n})\n\nconst changeNewAlbumAction = (res) => ({\n  type: actionTypes.CHANGE_NEW_ALBUM,\n  newAlbums: res.albums\n})\n\nconst changeUpRankingAction = (res) => ({\n  type: actionTypes.CHANGE_UP_RANKING,\n  upRanking: res.playlist\n})\n\nconst changeNewRankingAction = (res) => ({\n  type: actionTypes.CHANGE_NEW_RANKING,\n  newRanking: res.playlist\n})\n\nconst changeOriginRankingAction = (res) => ({\n  type: actionTypes.CHANGE_ORIGIN_RANKING,\n  originRanking: res.playlist\n})\n\nexport const getTopBannerAction = () => {\n  return dispatch => {\n    getTopBanners().then(res => {\n      dispatch(changeTopBannerAction(res));\n    })\n  }\n};\n\nexport const getHotRecommendAction = (limit) => {\n  return dispatch => {\n    getHotRecommends(limit).then(res => {\n      dispatch(changeHotRecommendAction(res));\n    })\n  }\n}\n\nexport const getNewAlbumAction = (limit) => {\n  return dispatch => {\n    getNewAlbums(limit).then(res => {\n      // const albums = res.albums;\n      dispatch(changeNewAlbumAction(res));\n    })\n  }\n}\n\nexport const getTopListAction = (idx) => {\n  return dispatch => {\n    getTopList(idx).then(res => {\n      switch (idx) {\n        case 0:\n          dispatch(changeUpRankingAction(res));\n          break;\n        case 2:\n          dispatch(changeNewRankingAction(res));\n          break;\n        case 3:\n          dispatch(changeOriginRankingAction(res));\n          break;\n        default:\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}