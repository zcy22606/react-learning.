{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\\\u51B7\\u9E1F\\u4E00\\u7C73\\u4E94\\\\Desktop\\\\my-learn\\\\React\\u5B66\\u4E60\\\\\\u8BFE\\u5802\\\\code\\\\hy-music-web-music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";/**\n[00:00.000] 作曲 : 许嵩\n[00:01.000] 作词 : 许嵩\n[00:22.240]天空好想下雨\n[00:24.380]我好想住你隔壁\n[00:26.810]傻站在你家楼下\n[00:29.500]抬起头数乌云\n[00:31.160]如果场景里出现一架钢琴\n[00:33.640]我会唱歌给你听\n[00:35.900]哪怕好多盆水往下淋\n[00:41.060]夏天快要过去}\n */ // [00:31.160]如果场景里出现一架钢琴\nvar parseExp=/\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})\\]/;export function parseLyric(lyricString){var lineStrings=lyricString.split(\"\\n\");var lyrics=[];var _iterator=_createForOfIteratorHelper(lineStrings),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var line=_step.value;if(line){var result=parseExp.exec(line);if(!result)continue;var time1=result[1]*60*1000;var time2=result[2]*1000;var time3=result[3].length===3?result[3]*1:result[3]*10;var time=time1+time2+time3;var content=line.replace(parseExp,\"\").trim();var lineObj={time:time,content:content};lyrics.push(lineObj);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return lyrics;}","map":{"version":3,"sources":["C:/Users/冷鸟一米五/Desktop/my-learn/React学习/课堂/code/hy-music-web-music/src/utils/parse-lyric.js"],"names":["parseExp","parseLyric","lyricString","lineStrings","split","lyrics","line","result","exec","time1","time2","time3","length","time","content","replace","trim","lineObj","push"],"mappings":"2QAAA;;;;;;;;;;;IAaA;AACA,GAAMA,CAAAA,QAAQ,CAAG,gCAAjB,CAEA,MAAO,SAASC,CAAAA,UAAT,CAAoBC,WAApB,CAAiC,CACtC,GAAMC,CAAAA,WAAW,CAAGD,WAAW,CAACE,KAAZ,CAAkB,IAAlB,CAApB,CAEA,GAAMC,CAAAA,MAAM,CAAG,EAAf,CAHsC,yCAIrBF,WAJqB,YAItC,+CAA8B,IAArBG,CAAAA,IAAqB,aAC5B,GAAIA,IAAJ,CAAU,CACR,GAAMC,CAAAA,MAAM,CAAGP,QAAQ,CAACQ,IAAT,CAAcF,IAAd,CAAf,CACA,GAAI,CAACC,MAAL,CAAa,SACb,GAAME,CAAAA,KAAK,CAAGF,MAAM,CAAC,CAAD,CAAN,CAAY,EAAZ,CAAiB,IAA/B,CACA,GAAMG,CAAAA,KAAK,CAAGH,MAAM,CAAC,CAAD,CAAN,CAAY,IAA1B,CACA,GAAMI,CAAAA,KAAK,CAAGJ,MAAM,CAAC,CAAD,CAAN,CAAUK,MAAV,GAAqB,CAArB,CAAwBL,MAAM,CAAC,CAAD,CAAN,CAAU,CAAlC,CAAqCA,MAAM,CAAC,CAAD,CAAN,CAAU,EAA7D,CACA,GAAMM,CAAAA,IAAI,CAAGJ,KAAK,CAAGC,KAAR,CAAgBC,KAA7B,CACA,GAAMG,CAAAA,OAAO,CAAGR,IAAI,CAACS,OAAL,CAAaf,QAAb,CAAuB,EAAvB,EAA2BgB,IAA3B,EAAhB,CACA,GAAMC,CAAAA,OAAO,CAAG,CAACJ,IAAI,CAAJA,IAAD,CAAOC,OAAO,CAAPA,OAAP,CAAhB,CACAT,MAAM,CAACa,IAAP,CAAYD,OAAZ,EACD,CACF,CAhBqC,qDAiBtC,MAAOZ,CAAAA,MAAP,CACD","sourcesContent":["/**\n[00:00.000] 作曲 : 许嵩\n[00:01.000] 作词 : 许嵩\n[00:22.240]天空好想下雨\n[00:24.380]我好想住你隔壁\n[00:26.810]傻站在你家楼下\n[00:29.500]抬起头数乌云\n[00:31.160]如果场景里出现一架钢琴\n[00:33.640]我会唱歌给你听\n[00:35.900]哪怕好多盆水往下淋\n[00:41.060]夏天快要过去}\n */\n\n// [00:31.160]如果场景里出现一架钢琴\nconst parseExp = /\\[(\\d{2}):(\\d{2})\\.(\\d{2,3})\\]/;\n\nexport function parseLyric(lyricString) {\n  const lineStrings = lyricString.split(\"\\n\");\n\n  const lyrics = [];\n  for (let line of lineStrings) {\n    if (line) {\n      const result = parseExp.exec(line);\n      if (!result) continue;\n      const time1 = result[1] * 60 * 1000;\n      const time2 = result[2] * 1000;\n      const time3 = result[3].length === 3? result[3]*1: result[3]*10;\n      const time = time1 + time2 + time3;\n      const content = line.replace(parseExp, \"\").trim();\n      const lineObj = {time, content};\n      lyrics.push(lineObj);\n    }\n  }\n  return lyrics;\n}"]},"metadata":{},"sourceType":"module"}