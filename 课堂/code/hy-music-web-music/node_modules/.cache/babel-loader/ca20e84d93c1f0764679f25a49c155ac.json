{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\\\u51B7\\u9E1F\\u4E00\\u7C73\\u4E94\\\\Desktop\\\\my-learn\\\\React\\u5B66\\u4E60\\\\\\u8BFE\\u5802\\\\code\\\\hy-music-web-music\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{memo,useState,useEffect,useRef,useCallback}from'react';import{useDispatch,useSelector,shallowEqual}from'react-redux';import{getSizeImage,formatDate,getPlaySong}from'@/utils/format-utils';import{getSongDetailAction,changeSequenceAction,changeCurrentIndexAndSongAction,changeCurrentLyricIndexAction}from'../store/actionCreators';import{message}from'antd';import{NavLink}from'react-router-dom';import{Slider}from'antd';import{PlaybarWrapper,Control,PlayInfo,Operator}from'./style';export default memo(function HYAppPlayerBar(){// props and state\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentTime=_useState2[0],setCurrentTime=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),progress=_useState4[0],setProgress=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isChanging=_useState6[0],setIsChanging=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isPlaying=_useState8[0],setIsPlaying=_useState8[1];// redux hook\nvar _useSelector=useSelector(function(state){return{currentSong:state.getIn([\"player\",\"currentSong\"]),sequence:state.getIn([\"player\",\"sequence\"]),lyricList:state.getIn([\"player\",\"lyricList\"]),currentLyricIndex:state.getIn([\"player\",\"currentLyricIndex\"])};},shallowEqual),currentSong=_useSelector.currentSong,sequence=_useSelector.sequence,lyricList=_useSelector.lyricList,currentLyricIndex=_useSelector.currentLyricIndex;var dispatch=useDispatch();// other hooks\nvar audioRef=useRef();useEffect(function(){dispatch(getSongDetailAction(167876));},[dispatch]);useEffect(function(){audioRef.current.src=getPlaySong(currentSong.id);audioRef.current.play().then(function(res){setIsPlaying(true);}).catch(function(err){setIsPlaying(false);});},[currentSong]);// other handle\nvar picUrl=currentSong.al&&currentSong.al.picUrl||\"\";var singerName=currentSong.ar&&currentSong.ar[0].name||\"未知歌手\";var duration=currentSong.dt||0;var showDuration=formatDate(duration,\"mm:ss\");var showCurrentTime=formatDate(currentTime,\"mm:ss\");// handle function\nvar playMusic=useCallback(function(){isPlaying?audioRef.current.pause():audioRef.current.play();setIsPlaying(!isPlaying);},[isPlaying]);var timeUpdate=function timeUpdate(e){var currentTime=e.target.currentTime;if(!isChanging){setCurrentTime(currentTime*1000);setProgress(currentTime*1000/duration*100);}// 获取当前的歌词\nvar i=0;for(;i<lyricList.length;i++){var lyricItem=lyricList[i];if(currentTime*1000<lyricItem.time){break;}}if(currentLyricIndex!==i-1){dispatch(changeCurrentLyricIndexAction(i-1));var content=lyricList[i-1]&&lyricList[i-1].content;message.open({key:\"lyric\",content:content,duration:0,className:\"lyric-class\"});}};var changeSequence=function changeSequence(){var currentSequence=sequence+1;if(currentSequence>2){currentSequence=0;}dispatch(changeSequenceAction(currentSequence));};var changeMusic=function changeMusic(tag){dispatch(changeCurrentIndexAndSongAction(tag));};var handleMusicEnded=function handleMusicEnded(){if(sequence===2){// 单曲循环\naudioRef.current.currentTime=0;audioRef.current.play();}else{dispatch(changeCurrentIndexAndSongAction(1));}};var sliderChange=useCallback(function(value){setIsChanging(true);var currentTime=value/100*duration;setCurrentTime(currentTime);setProgress(value);},[duration]);var sliderAfterChange=useCallback(function(value){var currentTime=value/100*duration/1000;audioRef.current.currentTime=currentTime;setCurrentTime(currentTime*1000);setIsChanging(false);if(!isPlaying){playMusic();}},[duration,isPlaying,playMusic]);return/*#__PURE__*/React.createElement(PlaybarWrapper,{className:\"sprite_player\"},/*#__PURE__*/React.createElement(\"div\",{className:\"content wrap-v2\"},/*#__PURE__*/React.createElement(Control,{isPlaying:isPlaying},/*#__PURE__*/React.createElement(\"button\",{className:\"sprite_player prev\",onClick:function onClick(e){return changeMusic(-1);}}),/*#__PURE__*/React.createElement(\"button\",{className:\"sprite_player play\",onClick:function onClick(e){return playMusic();}}),/*#__PURE__*/React.createElement(\"button\",{className:\"sprite_player next\",onClick:function onClick(e){return changeMusic(1);}})),/*#__PURE__*/React.createElement(PlayInfo,null,/*#__PURE__*/React.createElement(\"div\",{className:\"image\"},/*#__PURE__*/React.createElement(NavLink,{to:\"/discover/player\"},/*#__PURE__*/React.createElement(\"img\",{src:getSizeImage(picUrl,35),alt:\"\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"song\"},/*#__PURE__*/React.createElement(\"span\",{className:\"song-name\"},currentSong.name),/*#__PURE__*/React.createElement(\"a\",{href:\"#/\",className:\"singer-name\"},singerName)),/*#__PURE__*/React.createElement(\"div\",{className:\"progress\"},/*#__PURE__*/React.createElement(Slider,{defaultValue:30,value:progress,onChange:sliderChange,onAfterChange:sliderAfterChange}),/*#__PURE__*/React.createElement(\"div\",{className:\"time\"},/*#__PURE__*/React.createElement(\"span\",{className:\"now-time\"},showCurrentTime),/*#__PURE__*/React.createElement(\"span\",{className:\"divider\"},\"/\"),/*#__PURE__*/React.createElement(\"span\",{className:\"duration\"},showDuration))))),/*#__PURE__*/React.createElement(Operator,{sequence:sequence},/*#__PURE__*/React.createElement(\"div\",{className:\"left\"},/*#__PURE__*/React.createElement(\"button\",{className:\"sprite_player btn favor\"}),/*#__PURE__*/React.createElement(\"button\",{className:\"sprite_player btn share\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"right sprite_player\"},/*#__PURE__*/React.createElement(\"button\",{className:\"sprite_player btn volume\"}),/*#__PURE__*/React.createElement(\"button\",{className:\"sprite_player btn loop\",onClick:function onClick(e){return changeSequence();}}),/*#__PURE__*/React.createElement(\"button\",{className:\"sprite_player btn playlist\"})))),/*#__PURE__*/React.createElement(\"audio\",{ref:audioRef,onTimeUpdate:function onTimeUpdate(e){return timeUpdate(e);},onEnded:function onEnded(e){return handleMusicEnded();}}));});","map":{"version":3,"sources":["C:/Users/冷鸟一米五/Desktop/my-learn/React学习/课堂/code/hy-music-web-music/src/pages/player/app-player-bar/index.js"],"names":["React","memo","useState","useEffect","useRef","useCallback","useDispatch","useSelector","shallowEqual","getSizeImage","formatDate","getPlaySong","getSongDetailAction","changeSequenceAction","changeCurrentIndexAndSongAction","changeCurrentLyricIndexAction","message","NavLink","Slider","PlaybarWrapper","Control","PlayInfo","Operator","HYAppPlayerBar","currentTime","setCurrentTime","progress","setProgress","isChanging","setIsChanging","isPlaying","setIsPlaying","state","currentSong","getIn","sequence","lyricList","currentLyricIndex","dispatch","audioRef","current","src","id","play","then","res","catch","err","picUrl","al","singerName","ar","name","duration","dt","showDuration","showCurrentTime","playMusic","pause","timeUpdate","e","target","i","length","lyricItem","time","content","open","key","className","changeSequence","currentSequence","changeMusic","tag","handleMusicEnded","sliderChange","value","sliderAfterChange"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect, useRef, useCallback } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\n\nimport { getSizeImage, formatDate, getPlaySong } from '@/utils/format-utils';\nimport { \n  getSongDetailAction,\n  changeSequenceAction,\n  changeCurrentIndexAndSongAction,\n  changeCurrentLyricIndexAction \n} from '../store/actionCreators';\n\nimport { message } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { Slider } from 'antd';\nimport {\n  PlaybarWrapper,\n  Control,\n  PlayInfo,\n  Operator\n} from './style';\n\nexport default memo(function HYAppPlayerBar() {\n  // props and state\n  const [currentTime, setCurrentTime] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [isChanging, setIsChanging] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // redux hook\n  const { \n    currentSong, \n    sequence, \n    lyricList,\n    currentLyricIndex\n  } = useSelector(state => ({\n    currentSong: state.getIn([\"player\", \"currentSong\"]),\n    sequence: state.getIn([\"player\", \"sequence\"]),\n    lyricList: state.getIn([\"player\", \"lyricList\"]),\n    currentLyricIndex: state.getIn([\"player\", \"currentLyricIndex\"])\n  }), shallowEqual);\n  const dispatch = useDispatch();\n\n  // other hooks\n  const audioRef = useRef();\n  useEffect(() => {\n    dispatch(getSongDetailAction(167876));\n  }, [dispatch]);\n\n  useEffect(() =>  {\n    audioRef.current.src = getPlaySong(currentSong.id);\n    audioRef.current.play().then(res => {\n      setIsPlaying(true);\n    }).catch(err => {\n      setIsPlaying(false);\n    });\n  }, [currentSong]);\n\n  // other handle\n  const picUrl = (currentSong.al && currentSong.al.picUrl) || \"\";\n  const singerName = (currentSong.ar && currentSong.ar[0].name) || \"未知歌手\";\n  const duration = currentSong.dt || 0;\n  const showDuration = formatDate(duration, \"mm:ss\");\n  const showCurrentTime = formatDate(currentTime, \"mm:ss\");\n\n  // handle function\n  const playMusic = useCallback(() => {\n    isPlaying ? audioRef.current.pause(): audioRef.current.play();\n    setIsPlaying(!isPlaying);\n  }, [isPlaying]);\n\n  const timeUpdate = (e) => {\n    const currentTime = e.target.currentTime;\n    if (!isChanging) {\n      setCurrentTime(currentTime * 1000);\n      setProgress(currentTime * 1000 / duration * 100);\n    }\n\n    // 获取当前的歌词\n    let i = 0;\n    for (; i < lyricList.length; i++) {\n      let lyricItem = lyricList[i];\n      if (currentTime * 1000 < lyricItem.time) {\n        break;\n      }\n    }\n\n    if (currentLyricIndex !== i - 1) {\n      dispatch(changeCurrentLyricIndexAction(i - 1));\n      const content = lyricList[i - 1] && lyricList[i - 1].content\n      message.open({\n        key: \"lyric\",\n        content: content,\n        duration: 0,\n        className: \"lyric-class\"\n      })\n    }\n  }\n\n  const changeSequence = () => {\n    let currentSequence = sequence + 1;\n    if (currentSequence > 2) {\n      currentSequence = 0;\n    }\n    dispatch(changeSequenceAction(currentSequence));\n  }\n\n  const changeMusic = (tag) => {\n    dispatch(changeCurrentIndexAndSongAction(tag));\n  }\n\n  const handleMusicEnded = () => {\n    if (sequence === 2) { // 单曲循环\n      audioRef.current.currentTime = 0;\n      audioRef.current.play();\n    } else {\n      dispatch(changeCurrentIndexAndSongAction(1));\n    }\n  }\n\n  const sliderChange = useCallback((value) => {\n    setIsChanging(true);\n    const currentTime = value / 100 * duration;\n    setCurrentTime(currentTime);\n    setProgress(value);\n  }, [duration]);\n\n  const sliderAfterChange = useCallback((value) => {\n    const currentTime = value / 100 * duration / 1000;\n    audioRef.current.currentTime = currentTime;\n    setCurrentTime(currentTime * 1000);\n    setIsChanging(false);\n\n    if (!isPlaying) {\n      playMusic();\n    }\n  }, [duration, isPlaying, playMusic]);\n\n  return (\n    <PlaybarWrapper className=\"sprite_player\">\n      <div className=\"content wrap-v2\">\n        <Control isPlaying={isPlaying}>\n          <button className=\"sprite_player prev\"\n                  onClick={e => changeMusic(-1)}></button>\n          <button className=\"sprite_player play\" \n                  onClick={e => playMusic()}></button>\n          <button className=\"sprite_player next\"\n                  onClick={e => changeMusic(1)}></button>\n        </Control>\n        <PlayInfo>\n          <div className=\"image\">\n            <NavLink to=\"/discover/player\">\n              <img src={getSizeImage(picUrl, 35)} alt=\"\" />\n            </NavLink>\n          </div>\n          <div className=\"info\">\n            <div className=\"song\">\n              <span className=\"song-name\">{currentSong.name}</span>\n              <a href=\"#/\" className=\"singer-name\">{singerName}</a>\n            </div>\n            <div className=\"progress\">\n              <Slider defaultValue={30} \n                      value={progress}\n                      onChange={sliderChange}\n                      onAfterChange={sliderAfterChange}/>\n              <div className=\"time\">\n                <span className=\"now-time\">{showCurrentTime}</span>\n                <span className=\"divider\">/</span>\n                <span className=\"duration\">{showDuration}</span>\n              </div>\n            </div>\n          </div>\n        </PlayInfo>\n        <Operator sequence={sequence}>\n          <div className=\"left\">\n            <button className=\"sprite_player btn favor\"></button>\n            <button className=\"sprite_player btn share\"></button>\n          </div>\n          <div className=\"right sprite_player\">\n            <button className=\"sprite_player btn volume\"></button>\n            <button className=\"sprite_player btn loop\" onClick={e => changeSequence()}></button>\n            <button className=\"sprite_player btn playlist\"></button>\n          </div>\n        </Operator>\n      </div>\n      <audio ref={audioRef} \n             onTimeUpdate={e => timeUpdate(e)} \n             onEnded={e => handleMusicEnded()}/>\n    </PlaybarWrapper>\n  )\n});\n"]},"metadata":{},"sourceType":"module"}